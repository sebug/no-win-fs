// Generated by psc-make version 0.6.8
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");

/**
 *  | Boolean monoid and semigroup under disjunction.
 *  |
 *  | ``` purescript
 *  | Any x <> Any y == Any (x || y)
 *  | mempty :: Any == Any false
 *  | ```
 */
var Any = function (x) {
    return x;
};
var showAny = new Prelude.Show(function (_243) {
    return "Any (" + (Prelude.show(Prelude.showBoolean)(_243) + ")");
});
var semigroupAny = new Prelude.Semigroup(function (_244) {
    return function (_245) {
        return _244 || _245;
    };
});
var runAny = function (_236) {
    return _236;
};
var monoidAny = new Data_Monoid.Monoid(function () {
    return semigroupAny;
}, false);
var eqAny = new Prelude.Eq(function (_239) {
    return function (_240) {
        return _239 !== _240;
    };
}, function (_237) {
    return function (_238) {
        return _237 === _238;
    };
});
var ordAny = new Prelude.Ord(function () {
    return eqAny;
}, function (_241) {
    return function (_242) {
        return Prelude.compare(Prelude.ordBoolean)(_241)(_242);
    };
});
module.exports = {
    Any: Any, 
    runAny: runAny, 
    eqAny: eqAny, 
    ordAny: ordAny, 
    showAny: showAny, 
    semigroupAny: semigroupAny, 
    monoidAny: monoidAny
};
