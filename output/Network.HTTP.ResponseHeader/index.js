// Generated by psc-make version 0.6.8
"use strict";
var Prelude = require("Prelude");
var ResponseHeader = (function () {
    function ResponseHeader(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ResponseHeader.create = function (value0) {
        return function (value1) {
            return new ResponseHeader(value0, value1);
        };
    };
    return ResponseHeader;
})();
var showResponseHeader = new Prelude.Show(function (_5) {
    return "(ResponseHeader " + (Prelude.show(Prelude.showString)(_5.value0) + (" " + (Prelude.show(Prelude.showString)(_5.value1) + ")")));
});
var responseHeader = function (field) {
    return function (value) {
        return new ResponseHeader(field, value);
    };
};
var eqResponseHeader = new Prelude.Eq(function (x) {
    return function (y) {
        return !Prelude["=="](eqResponseHeader)(x)(y);
    };
}, function (_3) {
    return function (_4) {
        return _3.value0 === _4.value0 && _3.value1 === _4.value1;
    };
});
module.exports = {
    responseHeader: responseHeader, 
    eqResponseHeader: eqResponseHeader, 
    showResponseHeader: showResponseHeader
};
