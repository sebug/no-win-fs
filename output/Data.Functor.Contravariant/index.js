// Generated by psc-make version 0.6.8
"use strict";
var Prelude = require("Prelude");

/**
 *  | A `Contravariant` functor can be seen as a way of changing the input type
 *  | of a consumer of input, in contrast to the standard covariant `Functor`
 *  | that can be seen as a way of changing the output type of a producer of
 *  | output.
 *  |
 *  | `Contravariant` instances should satisfy the following laws:
 *  |
 *  | - Identity `(>$<) id = id`
 *  | - Composition `(f >$<) <<< (g >$<) = (>$<) (g <<< f)`
 */
var Contravariant = function ($greater$dollar$less) {
    this[">$<"] = $greater$dollar$less;
};

/**
 *  | A `Contravariant` functor can be seen as a way of changing the input type
 *  | of a consumer of input, in contrast to the standard covariant `Functor`
 *  | that can be seen as a way of changing the output type of a producer of
 *  | output.
 *  |
 *  | `Contravariant` instances should satisfy the following laws:
 *  |
 *  | - Identity `(>$<) id = id`
 *  | - Composition `(f >$<) <<< (g >$<) = (>$<) (g <<< f)`
 */
var $greater$dollar$less = function (dict) {
    return dict[">$<"];
};

/**
 *  | `(>#<)` is `(>$<)` with its arguments reversed.
 */
var $greater$hash$less = function (__dict_Contravariant_0) {
    return function (x) {
        return function (f) {
            return $greater$dollar$less(__dict_Contravariant_0)(f)(x);
        };
    };
};
module.exports = {
    Contravariant: Contravariant, 
    ">#<": $greater$hash$less, 
    ">$<": $greater$dollar$less
};
