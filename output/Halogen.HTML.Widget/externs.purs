-- Generated by psc-make version 0.6.8
module Halogen.HTML.Widget where
import Data.Function ()
import Halogen.Internal.VirtualDOM ()
import Prelude ()
import Data.Nullable ()
import Prim ()
import Prelude ()
import Data.DOM.Simple.Types ()
import Data.Int ()
import Data.Maybe ()
import Data.Function ()
import Data.Nullable ()
import Control.Monad.Eff ()
import Halogen.Internal.VirtualDOM ()
--  | Create a `VTree` from a third-party component (or _widget_), by providing a name, an ID, and three functions:
--  | 
--  | - An initialization function, which creates the DOM node, and receives a callback function which can
--  |   be used to generate inputs
--  | - An update function, which receives the previous DOM node and optionally creates a new one.
--  | - A finalizer function, which deallocates any necessary resources when the component is removed from the DOM.
--  |
--  | The three functions share a common piece of data of a hidden type `s`.
foreign import widget :: forall eff ctx val res. { destroy :: ctx -> Data.DOM.Simple.Types.HTMLElement -> Control.Monad.Eff.Eff eff Prelude.Unit, update :: val -> val -> ctx -> Data.DOM.Simple.Types.HTMLElement -> Control.Monad.Eff.Eff eff (Data.Maybe.Maybe Data.DOM.Simple.Types.HTMLElement), init :: (res -> Control.Monad.Eff.Eff eff Prelude.Unit) -> Control.Monad.Eff.Eff eff { node :: Data.DOM.Simple.Types.HTMLElement, context :: ctx }, id :: Prim.String, name :: Prim.String, value :: val } -> Halogen.Internal.VirtualDOM.Widget eff res
