// Generated by psc-make version 0.6.8

/**
 *  | This module provides convenience functions for creating Bootstrap _navbars_.
 */
"use strict";
var Halogen_HTML = require("Halogen.HTML");
var Prelude = require("Prelude");
var Halogen_HTML_Attributes = require("Halogen.HTML.Attributes");
var Halogen_Themes_Bootstrap3 = require("Halogen.Themes.Bootstrap3");
var Halogen_HTML_Target = require("Halogen.HTML.Target");
var Data_Array = require("Data.Array");
var Data_Foldable = require("Data.Foldable");
var Data_Monoid = require("Data.Monoid");
var Halogen_HTML_Events = require("Halogen.HTML.Events");
var Halogen_HTML_Events_Handler = require("Halogen.HTML.Events.Handler");

/**
 *  | Enumerates the different kinds of navigation item
 */
var NavLink = (function () {
    function NavLink(value0) {
        this.value0 = value0;
    };
    NavLink.create = function (value0) {
        return new NavLink(value0);
    };
    return NavLink;
})();

/**
 *  | Enumerates the different kinds of navigation item
 */
var NavDropDown = (function () {
    function NavDropDown(value0) {
        this.value0 = value0;
    };
    NavDropDown.create = function (value0) {
        return new NavDropDown(value0);
    };
    return NavDropDown;
})();

/**
 *  | Enumerates the different kinds of item which can be rendered in a navbar
 */
var Brand = (function () {
    function Brand(value0) {
        this.value0 = value0;
    };
    Brand.create = function (value0) {
        return new Brand(value0);
    };
    return Brand;
})();

/**
 *  | Enumerates the different kinds of item which can be rendered in a navbar
 */
var Nav = (function () {
    function Nav(value0) {
        this.value0 = value0;
    };
    Nav.create = function (value0) {
        return new Nav(value0);
    };
    return Nav;
})();

/**
 *  | Enumerates the different kinds of item which can be rendered in a navbar
 */
var Text = (function () {
    function Text(value0) {
        this.value0 = value0;
    };
    Text.create = function (value0) {
        return new Text(value0);
    };
    return Text;
})();

/**
 *  | Enumerates the different kinds of item which can be rendered in a navbar
 */
var Button = (function () {
    function Button(value0) {
        this.value0 = value0;
    };
    Button.create = function (value0) {
        return new Button(value0);
    };
    return Button;
})();

/**
 *  | Create a navbar from a configuration object.
 */
var navbar = function (conf) {
    var renderNavItem = function (_5) {
        if (_5 instanceof NavLink) {
            return Halogen_HTML.li((function () {
                if (_5.value0.active) {
                    return [ Halogen_HTML_Attributes.class_(Halogen_Themes_Bootstrap3.active) ];
                };
                if (!_5.value0.active) {
                    return [  ];
                };
                throw new Error("Failed pattern match");
            })())([ Halogen_HTML.a(Halogen_HTML_Target.target(_5.value0.target))([ Halogen_HTML.text(_5.value0.text) ]) ]);
        };
        if (_5 instanceof NavDropDown) {
            var renderLink = function (o_2) {
                return Halogen_HTML.li_([ Halogen_HTML.a(Halogen_HTML_Target.target(o_2.target))([ Halogen_HTML.text(o_2.text) ]) ]);
            };
            var divider = Halogen_HTML.li([ Halogen_HTML_Attributes.class_(Halogen_Themes_Bootstrap3.divider) ])([  ]);
            return Halogen_HTML.li([ Halogen_HTML_Attributes.class_(Halogen_Themes_Bootstrap3.dropdown) ])([ Halogen_HTML.a([ Halogen_HTML_Attributes.href("#"), Halogen_HTML_Attributes.class_(Halogen_Themes_Bootstrap3.dropdownToggle) ])([ Halogen_HTML.text(_5.value0.text) ]), Halogen_HTML.ul([ Halogen_HTML_Attributes.class_(Halogen_Themes_Bootstrap3.dropdownMenu) ])(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ divider ])(Data_Array.map(Data_Array.map(renderLink))(_5.value0.groups))) ]);
        };
        throw new Error("Failed pattern match");
    };
    var renderItem = function (_4) {
        if (_4 instanceof Brand) {
            return Halogen_HTML.a(Prelude[":"](Halogen_HTML_Attributes.class_(Halogen_Themes_Bootstrap3.navbarBrand))(Halogen_HTML_Target.target(_4.value0.target)))([ Halogen_HTML.text(_4.value0.text) ]);
        };
        if (_4 instanceof Nav) {
            return Halogen_HTML.ul([ Halogen_HTML_Attributes.classes([ Halogen_Themes_Bootstrap3.nav, Halogen_Themes_Bootstrap3.navbarNav ]) ])(Data_Array.map(renderNavItem)(_4.value0.items));
        };
        if (_4 instanceof Text) {
            return Halogen_HTML.p([ Halogen_HTML_Attributes.class_(Halogen_Themes_Bootstrap3.navbarText) ])([ Halogen_HTML.text(_4.value0) ]);
        };
        if (_4 instanceof Button) {
            return Halogen_HTML.a(Prelude[":"](Halogen_HTML_Attributes.classes([ Halogen_Themes_Bootstrap3.btn, Halogen_Themes_Bootstrap3.btnDefault, Halogen_Themes_Bootstrap3.navbarBtn ]))(Halogen_HTML_Target.target(_4.value0.target)))([ Halogen_HTML.text(_4.value0.text) ]);
        };
        throw new Error("Failed pattern match");
    };
    return Halogen_HTML.nav([ Halogen_HTML_Attributes.classes([ Halogen_Themes_Bootstrap3.navbar, Halogen_Themes_Bootstrap3.navbarDefault ]) ])([ Halogen_HTML.div([ Halogen_HTML_Attributes.class_(Halogen_Themes_Bootstrap3.containerFluid) ])(Data_Array.map(renderItem)(conf.items)) ]);
};
module.exports = {
    NavLink: NavLink, 
    NavDropDown: NavDropDown, 
    Brand: Brand, 
    Nav: Nav, 
    Text: Text, 
    Button: Button, 
    navbar: navbar
};
