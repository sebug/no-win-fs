// Generated by psc-make version 0.6.8
"use strict";
var Prelude = require("Prelude");
var Data_Bifunctor = require("Data.Bifunctor");
var Control_Biapply = require("Control.Biapply");
var Control_Biapplicative = require("Control.Biapplicative");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Monoid = require("Data.Monoid");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Traversable = require("Data.Traversable");
var Data_Foldable = require("Data.Foldable");
var Control_Apply = require("Control.Apply");

/**
 *  | Flips the order of the type arguments of a `Bifunctor`, creating a
 *  | `Functor` instance for the first type argument.
 */
var Flip = (function () {
    function Flip(value0) {
        this.value0 = value0;
    };
    Flip.create = function (value0) {
        return new Flip(value0);
    };
    return Flip;
})();

/**
 *  | Remove the `Flip` constructor.
 */
var runFlip = function (_662) {
    return _662.value0;
};
var flipFunctor = function (__dict_Bifunctor_3) {
    return new Prelude.Functor(function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Flip.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.lmap(__dict_Bifunctor_3)(f))(runFlip));
    });
};
var flipFoldable = function (__dict_Bifoldable_4) {
    return new Data_Foldable.Foldable(function (__dict_Monoid_5) {
        return function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_4)(__dict_Monoid_5)(f)(Prelude["const"](Data_Monoid.mempty(__dict_Monoid_5))))(runFlip);
        };
    }, function (f) {
        return function (z) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_4)(f)(Prelude["const"])(z))(runFlip);
        };
    }, function (f) {
        return function (z) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_4)(f)(Prelude.flip(Prelude["const"]))(z))(runFlip);
        };
    });
};
var flipTraversable = function (__dict_Bitraversable_0) {
    return new Data_Traversable.Traversable(function () {
        return flipFoldable(__dict_Bitraversable_0["__superclass_Data.Bifoldable.Bifoldable_1"]());
    }, function () {
        return flipFunctor(__dict_Bitraversable_0["__superclass_Data.Bifunctor.Bifunctor_0"]());
    }, function (__dict_Applicative_2) {
        return Data_Traversable.traverse(flipTraversable(__dict_Bitraversable_0))(__dict_Applicative_2)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_1) {
        return function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Flip.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bitraversable.bitraverse(__dict_Bitraversable_0)(__dict_Applicative_1)(f)(Prelude.pure(__dict_Applicative_1)))(runFlip));
        };
    });
};
var flipBifunctor = function (__dict_Bifunctor_9) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Flip.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.bimap(__dict_Bifunctor_9)(g)(f))(runFlip));
        };
    });
};
var flipBifoldable = function (__dict_Bifoldable_10) {
    return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_11) {
        return function (f) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_10)(__dict_Monoid_11)(g)(f))(runFlip);
            };
        };
    }, function (f) {
        return function (g) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_10)(g)(f)(z))(runFlip);
            };
        };
    }, function (f) {
        return function (g) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_10)(g)(f)(z))(runFlip);
            };
        };
    });
};
var flipBitraversable = function (__dict_Bitraversable_6) {
    return new Data_Bitraversable.Bitraversable(function () {
        return flipBifoldable(__dict_Bitraversable_6["__superclass_Data.Bifoldable.Bifoldable_1"]());
    }, function () {
        return flipBifunctor(__dict_Bitraversable_6["__superclass_Data.Bifunctor.Bifunctor_0"]());
    }, function (__dict_Applicative_8) {
        return Data_Bitraversable.bitraverse(flipBitraversable(__dict_Bitraversable_6))(__dict_Applicative_8)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_7) {
        return function (f) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Flip.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bitraversable.bitraverse(__dict_Bitraversable_6)(__dict_Applicative_7)(g)(f))(runFlip));
            };
        };
    });
};
var flipBiapply = function (__dict_Biapply_12) {
    return new Control_Biapply.Biapply(function (_663) {
        return function (_664) {
            return new Flip(Control_Biapply["<<*>>"](__dict_Biapply_12)(_663.value0)(_664.value0));
        };
    }, function () {
        return flipBifunctor(__dict_Biapply_12["__superclass_Data.Bifunctor.Bifunctor_0"]());
    });
};
var flipBiapplicative = function (__dict_Biapplicative_13) {
    return new Control_Biapplicative.Biapplicative(function () {
        return flipBiapply(__dict_Biapplicative_13["__superclass_Control.Biapply.Biapply_0"]());
    }, function (a) {
        return function (b) {
            return new Flip(Control_Biapplicative.bipure(__dict_Biapplicative_13)(b)(a));
        };
    });
};
module.exports = {
    Flip: Flip, 
    runFlip: runFlip, 
    flipBifunctor: flipBifunctor, 
    flipFunctor: flipFunctor, 
    flipBiapply: flipBiapply, 
    flipBiapplicative: flipBiapplicative, 
    flipBifoldable: flipBifoldable, 
    flipFoldable: flipFoldable, 
    flipBitraversable: flipBitraversable, 
    flipTraversable: flipTraversable
};
