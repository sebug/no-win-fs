-- Generated by psc-make version 0.6.8
module Data.Comparison where
import Prelude ()
import Prim ()
import Prelude ()
import Data.Function ()
import Data.Functor.Contravariant ()
import Data.Monoid ()
--  | An adaptor allowing `>$<` to map over the inputs of a comparison function.
--  | The default comparison for any values with an `Ord` instance.
newtype Comparison (a :: *) = Comparison (a -> a -> Prelude.Ordering)
foreign import defaultComparison :: forall a. (Prelude.Ord a) => Data.Comparison.Comparison a
foreign import runComparison :: forall a. Data.Comparison.Comparison a -> a -> a -> Prelude.Ordering
foreign import instance contravariantComparison :: Data.Functor.Contravariant.Contravariant Data.Comparison.Comparison
foreign import instance semigroupComparison :: Prelude.Semigroup (Data.Comparison.Comparison a)
foreign import instance monoidComparison :: Data.Monoid.Monoid (Data.Comparison.Comparison a)
