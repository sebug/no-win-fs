// Generated by psc-make version 0.6.8
"use strict";
var Prelude = require("Prelude");
var Data_Function = require("Data.Function");
var Data_Functor_Contravariant = require("Data.Functor.Contravariant");
var Data_Monoid = require("Data.Monoid");

/**
 *  | An adaptor allowing `>$<` to map over the inputs of a comparison function.
 */
var Comparison = function (x) {
    return x;
};
var semigroupComparison = new Prelude.Semigroup(function (_200) {
    return function (_201) {
        return Prelude["<>"](Prelude.semigroupArr(Prelude.semigroupArr(Prelude.semigroupOrdering)))(_200)(_201);
    };
});
var runComparison = function (_197) {
    return _197;
};
var monoidComparison = new Data_Monoid.Monoid(function () {
    return semigroupComparison;
}, function (_196) {
    return function (_195) {
        return Prelude.EQ.value;
    };
});

/**
 *  | The default comparison for any values with an `Ord` instance.
 */
var defaultComparison = function (__dict_Ord_0) {
    return Prelude.compare(__dict_Ord_0);
};
var contravariantComparison = new Data_Functor_Contravariant.Contravariant(function (_198) {
    return function (_199) {
        return Data_Function.on(_199)(_198);
    };
});
module.exports = {
    Comparison: Comparison, 
    defaultComparison: defaultComparison, 
    runComparison: runComparison, 
    contravariantComparison: contravariantComparison, 
    semigroupComparison: semigroupComparison, 
    monoidComparison: monoidComparison
};
