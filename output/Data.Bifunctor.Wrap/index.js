// Generated by psc-make version 0.6.8
"use strict";
var Prelude = require("Prelude");
var Data_Bifunctor = require("Data.Bifunctor");
var Control_Biapply = require("Control.Biapply");
var Control_Biapplicative = require("Control.Biapplicative");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Monoid = require("Data.Monoid");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Traversable = require("Data.Traversable");
var Data_Foldable = require("Data.Foldable");
var Control_Apply = require("Control.Apply");

/**
 *  | A `newtype` wrapper which provides default `Functor`, `Foldable` and `Traversable`
 *  | type class instances for `Bifunctor`s.
 */
var Wrap = (function () {
    function Wrap(value0) {
        this.value0 = value0;
    };
    Wrap.create = function (value0) {
        return new Wrap(value0);
    };
    return Wrap;
})();

/**
 *  | Remove the `Wrap` constructor.
 */
var unwrap = function (_698) {
    return _698.value0;
};
var wrapBifoldable = function (__dict_Bifoldable_2) {
    return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_3) {
        return function (f) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_2)(__dict_Monoid_3)(f)(g))(unwrap);
            };
        };
    }, function (f) {
        return function (g) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_2)(f)(g)(z))(unwrap);
            };
        };
    }, function (f) {
        return function (g) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_2)(f)(g)(z))(unwrap);
            };
        };
    });
};
var wrapBifunctor = function (__dict_Bifunctor_4) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Wrap.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.bimap(__dict_Bifunctor_4)(f)(g))(unwrap));
        };
    });
};
var wrapBiapply = function (__dict_Biapply_0) {
    return new Control_Biapply.Biapply(function (_699) {
        return function (_700) {
            return new Wrap(Control_Biapply["<<*>>"](__dict_Biapply_0)(_699.value0)(_700.value0));
        };
    }, function () {
        return wrapBifunctor(__dict_Biapply_0["__superclass_Data.Bifunctor.Bifunctor_0"]());
    });
};
var wrapBiapplicative = function (__dict_Biapplicative_1) {
    return new Control_Biapplicative.Biapplicative(function () {
        return wrapBiapply(__dict_Biapplicative_1["__superclass_Control.Biapply.Biapply_0"]());
    }, function (a) {
        return function (b) {
            return new Wrap(Control_Biapplicative.bipure(__dict_Biapplicative_1)(a)(b));
        };
    });
};
var wrapBitraversable = function (__dict_Bitraversable_5) {
    return new Data_Bitraversable.Bitraversable(function () {
        return wrapBifoldable(__dict_Bitraversable_5["__superclass_Data.Bifoldable.Bifoldable_1"]());
    }, function () {
        return wrapBifunctor(__dict_Bitraversable_5["__superclass_Data.Bifunctor.Bifunctor_0"]());
    }, function (__dict_Applicative_7) {
        return Data_Bitraversable.bitraverse(wrapBitraversable(__dict_Bitraversable_5))(__dict_Applicative_7)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_6) {
        return function (f) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_6["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Wrap.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bitraversable.bitraverse(__dict_Bitraversable_5)(__dict_Applicative_6)(f)(g))(unwrap));
            };
        };
    });
};
var wrapFoldable = function (__dict_Bifoldable_8) {
    return new Data_Foldable.Foldable(function (__dict_Monoid_9) {
        return function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_8)(__dict_Monoid_9)(Prelude["const"](Data_Monoid.mempty(__dict_Monoid_9)))(f))(unwrap);
        };
    }, function (f) {
        return function (z) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_8)(Prelude["const"])(f)(z))(unwrap);
        };
    }, function (f) {
        return function (z) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_8)(Prelude.flip(Prelude["const"]))(f)(z))(unwrap);
        };
    });
};
var wrapFunctor = function (__dict_Bifunctor_10) {
    return new Prelude.Functor(function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Wrap.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.rmap(__dict_Bifunctor_10)(f))(unwrap));
    });
};
var wrapTraversable = function (__dict_Bitraversable_11) {
    return new Data_Traversable.Traversable(function () {
        return wrapFoldable(__dict_Bitraversable_11["__superclass_Data.Bifoldable.Bifoldable_1"]());
    }, function () {
        return wrapFunctor(__dict_Bitraversable_11["__superclass_Data.Bifunctor.Bifunctor_0"]());
    }, function (__dict_Applicative_13) {
        return Data_Traversable.traverse(wrapTraversable(__dict_Bitraversable_11))(__dict_Applicative_13)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_12) {
        return function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_12["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Wrap.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bitraversable.bitraverse(__dict_Bitraversable_11)(__dict_Applicative_12)(Prelude.pure(__dict_Applicative_12))(f))(unwrap));
        };
    });
};
module.exports = {
    Wrap: Wrap, 
    unwrap: unwrap, 
    wrapBifunctor: wrapBifunctor, 
    wrapFunctor: wrapFunctor, 
    wrapBiapply: wrapBiapply, 
    wrapBiapplicative: wrapBiapplicative, 
    wrapBifoldable: wrapBifoldable, 
    wrapFoldable: wrapFoldable, 
    wrapBitraversable: wrapBitraversable, 
    wrapTraversable: wrapTraversable
};
