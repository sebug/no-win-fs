// Generated by psc-make version 0.6.8
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Aff = require("Control.Monad.Aff");
var Network_HTTP_Method = require("Network.HTTP.Method");
var Network_HTTP_RequestHeader = require("Network.HTTP.RequestHeader");
var Data_Nullable = require("Data.Nullable");
var Network_HTTP_Affjax_Request = require("Network.HTTP.Affjax.Request");
var Network_HTTP_Affjax_Response = require("Network.HTTP.Affjax.Response");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var Data_Function = require("Data.Function");
var Network_HTTP_ResponseHeader = require("Network.HTTP.ResponseHeader");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Either = require("Data.Either");
var Data_Foreign = require("Data.Foreign");
var Data_Maybe = require("Data.Maybe");
var DOM_XHR = require("DOM.XHR");
var Network_HTTP_StatusCode = require("Network.HTTP.StatusCode");
var Data_Array = require("Data.Array");

  function _ajax (mkHeader, options, canceler, errback, callback) {
    return function () {
      var xhr = new XMLHttpRequest();
      xhr.open(options.method || "GET", options.url || "/", true, options.username, options.password);
      if (options.headers) {
        for (var i = 0, header; header = options.headers[i]; i++) {
          xhr.setRequestHeader(header.field, header.value);
        }
      }
      xhr.onerror = function (err) {
        errback(new Error("AJAX request failed: " + options.method + " " + options.url))();
      };
      xhr.onload = function () {
        callback({
          status: xhr.status,
          headers: xhr.getAllResponseHeaders().split("\n")
            .filter(function (header) {
              return header.length > 0;
            })
            .map(function (header) {
              var i = header.indexOf(":");
              return mkHeader(header.substring(0, i))(header.substring(i + 2));
            }),
          response: xhr.response
        })();
      };
      xhr.responseType = options.responseType;
      xhr.send(options.content);
      return canceler(xhr);
    };
  }
  ;

  function _cancelAjax (xhr, cancelError, errback, callback) {
    return function () {
      try { xhr.abort(); } catch (e) { return callback(false)(); }
      return callback(true)();
    };
  };
  ;
var defaultRequest = {
    method: Network_HTTP_Method.GET.value, 
    url: "/", 
    headers: [  ], 
    content: Data_Maybe.Nothing.value, 
    username: Data_Maybe.Nothing.value, 
    password: Data_Maybe.Nothing.value
};
var cancelAjax = function (xhr) {
    return function (err) {
        return Control_Monad_Aff.makeAff(function (eb) {
            return function (cb) {
                return _cancelAjax(xhr, err, eb, cb);
            };
        });
    };
};

/**
 *  | Run a request directly without using `Aff`.
 */
var affjax$prime = function (__dict_Requestable_0) {
    return function (__dict_Respondable_1) {
        return function (req) {
            return function (eb) {
                return function (cb) {
                    var req$prime = {
                        method: Network_HTTP_Method.methodToString(req.method), 
                        url: req.url, 
                        headers: Prelude["<$>"](Data_Array.functorArray)(function (h) {
                            return {
                                field: Network_HTTP_RequestHeader.requestHeaderName(h), 
                                value: Network_HTTP_RequestHeader.requestHeaderValue(h)
                            };
                        })(req.headers), 
                        content: Data_Nullable.toNullable(Prelude["<$>"](Data_Maybe.functorMaybe)(Network_HTTP_Affjax_Request.toRequest(__dict_Requestable_0))(req.content)), 
                        responseType: Network_HTTP_Affjax_Response.responseTypeToString(Network_HTTP_Affjax_Response.responseType(__dict_Respondable_1)), 
                        username: Data_Nullable.toNullable(req.username), 
                        password: Data_Nullable.toNullable(req.password)
                    };
                    var cb$prime = function (res) {
                        var _88 = Prelude["<$>"](Data_Either.functorEither)(function (_0) {
                            var _86 = {};
                            for (var _87 in res) {
                                if (res.hasOwnProperty(_87)) {
                                    _86[_87] = res[_87];
                                };
                            };
                            _86.response = _0;
                            return _86;
                        })(Network_HTTP_Affjax_Response.fromResponse(__dict_Respondable_1)(res.response));
                        if (_88 instanceof Data_Either.Left) {
                            return eb(Control_Monad_Eff_Exception.error(Prelude.show(Data_Foreign.showForeignError)(_88.value0)));
                        };
                        if (_88 instanceof Data_Either.Right) {
                            return cb(_88.value0);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return _ajax(Network_HTTP_ResponseHeader.responseHeader, req$prime, cancelAjax, eb, cb$prime);
                };
            };
        };
    };
};

/**
 *  | Makes an `Affjax` request.
 */
var affjax = function (__dict_Requestable_2) {
    return function (__dict_Respondable_3) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Aff["makeAff'"])(affjax$prime(__dict_Requestable_2)(__dict_Respondable_3));
    };
};

/**
 *  | Makes a `DELETE` request to the specified URL.
 */
var $$delete = function (__dict_Respondable_4) {
    return function (u) {
        return affjax(Network_HTTP_Affjax_Request.requestableUnit)(__dict_Respondable_4)((function () {
            var _91 = {};
            for (var _92 in defaultRequest) {
                if (defaultRequest.hasOwnProperty(_92)) {
                    _91[_92] = defaultRequest[_92];
                };
            };
            _91.method = Network_HTTP_Method.DELETE.value;
            _91.url = u;
            return _91;
        })());
    };
};

/**
 *  | Makes a `DELETE` request to the specified URL and ignores the response.
 */
var delete_ = $$delete(Network_HTTP_Affjax_Response.responsableUnit);

/**
 *  | Makes a `GET` request to the specified URL.
 */
var get = function (__dict_Respondable_5) {
    return function (u) {
        return affjax(Network_HTTP_Affjax_Request.requestableUnit)(__dict_Respondable_5)((function () {
            var _93 = {};
            for (var _94 in defaultRequest) {
                if (defaultRequest.hasOwnProperty(_94)) {
                    _93[_94] = defaultRequest[_94];
                };
            };
            _93.url = u;
            return _93;
        })());
    };
};

/**
 *  | Makes a `POST` request to the specified URL, sending data.
 */
var post = function (__dict_Requestable_6) {
    return function (__dict_Respondable_7) {
        return function (u) {
            return function (c) {
                return affjax(__dict_Requestable_6)(__dict_Respondable_7)((function () {
                    var _95 = {};
                    for (var _96 in defaultRequest) {
                        if (defaultRequest.hasOwnProperty(_96)) {
                            _95[_96] = defaultRequest[_96];
                        };
                    };
                    _95.method = Network_HTTP_Method.POST.value;
                    _95.url = u;
                    _95.content = new Data_Maybe.Just(c);
                    return _95;
                })());
            };
        };
    };
};

/**
 *  | Makes a `POST` request to the specified URL, sending data and ignoring the
 *  | response.
 */
var post_ = function (__dict_Requestable_8) {
    return post(__dict_Requestable_8)(Network_HTTP_Affjax_Response.responsableUnit);
};

/**
 *  | Makes a `POST` request to the specified URL with the option to send data.
 */
var post$prime = function (__dict_Requestable_9) {
    return function (__dict_Respondable_10) {
        return function (u) {
            return function (c) {
                return affjax(__dict_Requestable_9)(__dict_Respondable_10)((function () {
                    var _97 = {};
                    for (var _98 in defaultRequest) {
                        if (defaultRequest.hasOwnProperty(_98)) {
                            _97[_98] = defaultRequest[_98];
                        };
                    };
                    _97.method = Network_HTTP_Method.POST.value;
                    _97.url = u;
                    _97.content = c;
                    return _97;
                })());
            };
        };
    };
};

/**
 *  | Makes a `POST` request to the specified URL with the option to send data,
 *  | and ignores the response.
 */
var post_$prime = function (__dict_Requestable_11) {
    return post$prime(__dict_Requestable_11)(Network_HTTP_Affjax_Response.responsableUnit);
};

/**
 *  | Makes a `PUT` request to the specified URL, sending data.
 */
var put = function (__dict_Requestable_12) {
    return function (__dict_Respondable_13) {
        return function (u) {
            return function (c) {
                return affjax(__dict_Requestable_12)(__dict_Respondable_13)((function () {
                    var _99 = {};
                    for (var _100 in defaultRequest) {
                        if (defaultRequest.hasOwnProperty(_100)) {
                            _99[_100] = defaultRequest[_100];
                        };
                    };
                    _99.method = Network_HTTP_Method.PUT.value;
                    _99.url = u;
                    _99.content = new Data_Maybe.Just(c);
                    return _99;
                })());
            };
        };
    };
};

/**
 *  | Makes a `PUT` request to the specified URL, sending data and ignoring the
 *  | response.
 */
var put_ = function (__dict_Requestable_14) {
    return put(__dict_Requestable_14)(Network_HTTP_Affjax_Response.responsableUnit);
};

/**
 *  | Makes a `PUT` request to the specified URL with the option to send data.
 */
var put$prime = function (__dict_Requestable_15) {
    return function (__dict_Respondable_16) {
        return function (u) {
            return function (c) {
                return affjax(__dict_Requestable_15)(__dict_Respondable_16)((function () {
                    var _101 = {};
                    for (var _102 in defaultRequest) {
                        if (defaultRequest.hasOwnProperty(_102)) {
                            _101[_102] = defaultRequest[_102];
                        };
                    };
                    _101.method = Network_HTTP_Method.PUT.value;
                    _101.url = u;
                    _101.content = c;
                    return _101;
                })());
            };
        };
    };
};

/**
 *  | Makes a `PUT` request to the specified URL with the option to send data,
 *  | and ignores the response.
 */
var put_$prime = function (__dict_Requestable_17) {
    return put$prime(__dict_Requestable_17)(Network_HTTP_Affjax_Response.responsableUnit);
};
module.exports = {
    delete_: delete_, 
    "delete": $$delete, 
    "put_'": put_$prime, 
    "put'": put$prime, 
    put_: put_, 
    put: put, 
    "post_'": post_$prime, 
    "post'": post$prime, 
    post_: post_, 
    post: post, 
    get: get, 
    "affjax'": affjax$prime, 
    affjax: affjax, 
    defaultRequest: defaultRequest
};
