// Generated by psc-make version 0.6.8
"use strict";
var Data_Foreign = require("Data.Foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");

/**
 *  | A `newtype` wrapper whose `IsForeign` instance correctly handles
 *  | undefined values.
 *  |
 *  | Conceptually, this type represents values which may be `undefined`, 
 *  | but not `null`.
 */
var Undefined = function (x) {
    return x;
};

/**
 *  | Unwrap an `Undefined` value
 */
var runUndefined = function (_185) {
    return _185;
};

/**
 *  | Read an `Undefined` value
 */
var readUndefined = function (_186) {
    return function (_187) {
        if (Data_Foreign.isUndefined(_187)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidArr)(Undefined)(Data_Maybe.Just.create))(_186(_187));
    };
};
module.exports = {
    Undefined: Undefined, 
    readUndefined: readUndefined, 
    runUndefined: runUndefined
};
