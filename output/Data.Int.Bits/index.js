// Generated by psc-make version 0.6.8
"use strict";
var Prelude = require("Prelude");
var Data_Int = require("Data.Int");

  function andImpl(n1) {
    return function(n2) {
      return n1 & n2;
    };
  }
  ;

  function orImpl(n1) {
    return function(n2) {
      return n1 | n2;
    };
  }
  ;

  function xorImpl(n1) {
    return function(n2) {
      return n1 ^ n2;
    };
  }
  ;

  function shl(n1) {
    return function(n2) {
      return n1 << n2;
    };
  }
  ;

  function shr(n1) {
    return function(n2) {
      return n1 >> n2;
    };
  }
  ;

  function zshr(n1) {
    return function(n2) {
      return n1 >>> n2;
    };
  }
  ;

  function complement(n) {
    return ~n;
  }
  ;
var $dot$bar$dot = orImpl;
var $dot$up$dot = xorImpl;
var $dot$amp$dot = andImpl;
module.exports = {
    complement: complement, 
    zshr: zshr, 
    shr: shr, 
    shl: shl, 
    ".^.": $dot$up$dot, 
    ".|.": $dot$bar$dot, 
    ".&.": $dot$amp$dot
};
