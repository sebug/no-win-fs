// Generated by psc-make version 0.6.8

/**
 *  | Convenience functions for working with form elements.
 */
"use strict";
var Data_Foreign_Class = require("Data.Foreign.Class");
var Prelude = require("Prelude");
var Control_Plus = require("Control.Plus");
var Halogen_HTML_Attributes = require("Halogen.HTML.Attributes");
var Data_Foreign = require("Data.Foreign");
var DOM = require("DOM");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_Traversable = require("Data.Traversable");
var Control_Alternative = require("Control.Alternative");
var Halogen_HTML_Events_Handler = require("Halogen.HTML.Events.Handler");
var Data_Foreign_Index = require("Data.Foreign.Index");

/**
 *  | Attach event handler to event ```key``` with getting ```prop``` field
 *  | as an argument of handler
 */
var addForeignPropHandler = function (__dict_Alternative_0) {
    return function (__dict_IsForeign_1) {
        return function (key) {
            return function (prop) {
                return function (f) {
                    var handler = function (e) {
                        var _3199 = Data_Foreign_Class.readProp(__dict_IsForeign_1)(Data_Foreign_Index.indexString)(prop)(e);
                        if (_3199 instanceof Data_Either.Left) {
                            return Prelude.pure(Halogen_HTML_Events_Handler.applicativeEventHandler)(Control_Plus.empty(__dict_Alternative_0["__superclass_Control.Plus.Plus_1"]()));
                        };
                        if (_3199 instanceof Data_Either.Right) {
                            return f(_3199.value0);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Halogen_HTML_Attributes.handler(Halogen_HTML_Attributes.eventName(key))(function (e) {
                        return handler(Data_Foreign.toForeign(e.target));
                    });
                };
            };
        };
    };
};

/**
 *  | Attach an event handler which will fire when a checkbox is checked or unchecked
 */
var onChecked = function (__dict_Alternative_2) {
    return addForeignPropHandler(__dict_Alternative_2)(Data_Foreign_Class.booleanIsForeign)("change")("checked");
};

/**
 *  | Attach an event handler which will fire on input
 */
var onInput = function (__dict_Alternative_3) {
    return function (__dict_IsForeign_4) {
        return addForeignPropHandler(__dict_Alternative_3)(__dict_IsForeign_4)("input")("value");
    };
};

/**
 *  | Attach an event handler which will produce an input when the value of an input field changes
 *  |
 *  | An input will not be produced if the value cannot be cast to the appropriate type.
 */
var onValueChanged = function (__dict_Alternative_5) {
    return function (__dict_IsForeign_6) {
        return addForeignPropHandler(__dict_Alternative_5)(__dict_IsForeign_6)("change")("value");
    };
};
module.exports = {
    onInput: onInput, 
    onChecked: onChecked, 
    onValueChanged: onValueChanged
};
