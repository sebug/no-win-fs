// Generated by psc-make version 0.6.8
"use strict";
var Data_DOM_Simple_Unsafe_NodeList = require("Data.DOM.Simple.Unsafe.NodeList");
var Prelude = require("Prelude");
var Data_DOM_Simple_Unsafe_Utils = require("Data.DOM.Simple.Unsafe.Utils");
var Data_Traversable = require("Data.Traversable");
var Data_Array = require("Data.Array");
var DOM = require("DOM");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var Data_DOM_Simple_Types = require("Data.DOM.Simple.Types");
var NodeListInst = function (item, length) {
    this.item = item;
    this.length = length;
};
var nodeListToArray$prime = Data_DOM_Simple_Unsafe_NodeList.unsafeNodeListToArray;
var nodeList = new NodeListInst(function (idx) {
    return function (el) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Unsafe_NodeList.unsafeNodeListItem(idx)(el))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_DOM_Simple_Unsafe_Utils.ensure)(Prelude["return"](Control_Monad_Eff.monadEff)));
    };
}, Data_DOM_Simple_Unsafe_NodeList.unsafeNodeListLength);
var length = function (dict) {
    return dict.length;
};
var item = function (dict) {
    return dict.item;
};
var nodeListToArray = function (nl) {
    return function __do() {
        var _38 = length(nodeList)(nl)();
        var _37 = Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(Data_Array.map(function (i) {
            return item(nodeList)(i)(nl);
        })(Data_Array.range(0)(_38)))();
        return Data_Array.catMaybes(_37);
    };
};
module.exports = {
    NodeListInst: NodeListInst, 
    "nodeListToArray'": nodeListToArray$prime, 
    nodeListToArray: nodeListToArray, 
    item: item, 
    length: length, 
    nodeList: nodeList
};
