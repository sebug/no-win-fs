// Generated by psc-make version 0.6.8
"use strict";
var Data_String = require("Data.String");
var Prelude = require("Prelude");
var Data_DOM_Simple_Window = require("Data.DOM.Simple.Window");
var Control_Bind = require("Control.Bind");
var Data_DOM_Simple_Document = require("Data.DOM.Simple.Document");
var Data_DOM_Simple_Element = require("Data.DOM.Simple.Element");
var Halogen_HTML = require("Halogen.HTML");
var Halogen_HTML_Attributes = require("Halogen.HTML.Attributes");
var Halogen_HTML_Events_Forms = require("Halogen.HTML.Events.Forms");
var Halogen_HTML_Events = require("Halogen.HTML.Events");
var Data_Foldable = require("Data.Foldable");
var Halogen_Component = require("Halogen.Component");
var Halogen_Signal = require("Halogen.Signal");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Debug_Trace = require("Debug.Trace");
var Control_Plus = require("Control.Plus");
var Network_HTTP_Affjax = require("Network.HTTP.Affjax");
var Control_Alt = require("Control.Alt");
var Data_Foreign_Class = require("Data.Foreign.Class");
var Halogen_HTML_Events_Monad = require("Halogen.HTML.Events.Monad");
var Halogen = require("Halogen");
var Data_Void = require("Data.Void");
var Data_Tuple = require("Data.Tuple");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_StrMap = require("Data.StrMap");
var Control_Functor = require("Control.Functor");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Aff = require("Control.Monad.Aff");
var DOM = require("DOM");
var Data_DOM_Simple_Types = require("Data.DOM.Simple.Types");
var Halogen_HTML_Events_Handler = require("Halogen.HTML.Events.Handler");
var Network_HTTP_Affjax_Request = require("Network.HTTP.Affjax.Request");
var Network_HTTP_Affjax_Response = require("Network.HTTP.Affjax.Response");
var Data_Foreign_Index = require("Data.Foreign.Index");
var Data_Array = require("Data.Array");
var Data_Monoid = require("Data.Monoid");

/**
 *  The state of the application
 */
var State = (function () {
    function State(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    State.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new State(value0, value1, value2);
            };
        };
    };
    return State;
})();
var SetBusy = (function () {
    function SetBusy() {

    };
    SetBusy.value = new SetBusy();
    return SetBusy;
})();
var SetMessage = (function () {
    function SetMessage(value0) {
        this.value0 = value0;
    };
    SetMessage.create = function (value0) {
        return new SetMessage(value0);
    };
    return SetMessage;
})();
var SetResult = (function () {
    function SetResult(value0) {
        this.value0 = value0;
    };
    SetResult.create = function (value0) {
        return new SetResult(value0);
    };
    return SetResult;
})();
var update = function (_4) {
    return function (_5) {
        if (_5 instanceof SetBusy) {
            return new State(true, _4.value1, _4.value2);
        };
        if (_5 instanceof SetMessage) {
            return new State(_4.value0, _5.value0, Data_Maybe.Nothing.value);
        };
        if (_5 instanceof SetResult) {
            return new State(false, _4.value1, new Data_Maybe.Just(_5.value0));
        };
        throw new Error("Failed pattern match");
    };
};

/**
 *  Called when the component is initialized
 */
var initialized = Prelude[">>="](Halogen_HTML_Events_Monad.bindEvent)(Control_Monad_Eff_Class.liftEff(Halogen_HTML_Events_Monad.monadEffEvent)(Debug_Trace.trace("UI initialized")))(function () {
    return Control_Plus.empty(Halogen_HTML_Events_Monad.plusEvent);
});
var initialMessage = Data_String.joinWith("\n")([ "Oh, hello", "world" ]);

/**
 *  Handle a request to an external service
 */
var handler = function (message) {
    var transformMessageAff = Prelude[">>="](Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.post(Network_HTTP_Affjax_Request.requestableString)(Network_HTTP_Affjax_Response.responsableJSON)("/api/transform")(message))(function (_0) {
        return Prelude["return"](Control_Monad_Aff.monadAff)((function () {
            var _21 = Control_Alt["<|>"](Data_Either.altEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("transformed")(_0.response))(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("error")(_0.response));
            if (_21 instanceof Data_Either.Right) {
                return new SetResult(_21.value0);
            };
            if (_21 instanceof Data_Either.Left) {
                return new SetResult("Invalid response");
            };
            throw new Error("Failed pattern match");
        })());
    });
    return Halogen_HTML_Events_Monad.andThen(Halogen_HTML_Events_Monad["yield"](SetBusy.value))(function (_3) {
        return Halogen_HTML_Events_Monad.async(transformMessageAff);
    });
};

/**
 *  Called when the component is finalized
 */
var finalized = Prelude[">>="](Halogen_HTML_Events_Monad.bindEvent)(Control_Monad_Eff_Class.liftEff(Halogen_HTML_Events_Monad.monadEffEvent)(Debug_Trace.trace("UI finalized")))(function () {
    return Control_Plus.empty(Halogen_HTML_Events_Monad.plusEvent);
});
var ui = (function () {
    var render = function (_6) {
        return Halogen_HTML.div([  ])(Prelude["++"](Data_Array.semigroupArray)([ Halogen_HTML.h1([ Halogen_HTML_Attributes.id_("header") ])([ Halogen_HTML.text("Ajax example") ]), Halogen_HTML.h2_([ Halogen_HTML.text("Initial Message") ]), Halogen_HTML.p_([ Halogen_HTML.textarea([ Halogen_HTML_Attributes.value(_6.value1), Halogen_HTML_Events_Forms.onInput(Halogen_HTML_Events_Monad.alternativeEvent)(Data_Foreign_Class.stringIsForeign)(Halogen_HTML_Events.input(Halogen_HTML_Events_Monad.applicativeEvent)(SetMessage.create)) ])([  ]) ]), Halogen_HTML.p_([ Halogen_HTML.button([ Halogen_HTML_Attributes.disabled(_6.value0), Halogen_HTML_Events.onClick(function (_2) {
            return Prelude.pure(Halogen_HTML_Events_Handler.applicativeEventHandler)(handler(_6.value1));
        }) ])([ Halogen_HTML.text("Transform") ]) ]), Halogen_HTML.p_([ Halogen_HTML.text((function () {
            if (_6.value0) {
                return "Transforming...";
            };
            if (!_6.value0) {
                return "";
            };
            throw new Error("Failed pattern match");
        })()) ]) ])(Prelude.flip(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray))(_6.value2)(function (transformedMessage) {
            return [ Halogen_HTML.div([ Halogen_HTML_Attributes.initializer(initialized), Halogen_HTML_Attributes.finalizer(finalized) ])([ Halogen_HTML.h2_([ Halogen_HTML.text("transformed message") ]), Halogen_HTML.div_([ Halogen_HTML.text(transformedMessage) ]) ]) ];
        })));
    };
    return Halogen_Component.component(Halogen_HTML_Events_Monad.functorEvent)(Prelude["<$>"](Halogen_Signal.functorSF1)(render)(Halogen_Signal.stateful(new State(false, initialMessage, Data_Maybe.Nothing.value))(update)));
})();
var appendToBody = function (e) {
    return Prelude[">>="](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Window.document(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow))(Control_Bind[">=>"](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Document.body(Data_DOM_Simple_Document.htmlDocument))(Prelude.flip(Data_DOM_Simple_Element.appendChild(Data_DOM_Simple_Element.htmlElement))(e)));
};
var main = function __do() {
    var _1 = Halogen.runUI(ui)();
    return appendToBody(_1.value0)();
};
module.exports = {
    SetBusy: SetBusy, 
    SetMessage: SetMessage, 
    SetResult: SetResult, 
    State: State, 
    main: main, 
    handler: handler, 
    finalized: finalized, 
    initialized: initialized, 
    update: update, 
    ui: ui, 
    appendToBody: appendToBody, 
    initialMessage: initialMessage
};
