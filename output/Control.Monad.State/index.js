// Generated by psc-make version 0.6.8

/**
 *  | This module defines the `State` monad.
 */
"use strict";
var Prelude = require("Prelude");
var Data_Identity = require("Data.Identity");
var Control_Monad_State_Trans = require("Control.Monad.State.Trans");
var Data_Tuple = require("Data.Tuple");

/**
 *  | Modify the state in a `State` action
 */
var withState = Control_Monad_State_Trans.withStateT;

/**
 *  | Run a computation in the `State` monad
 */
var runState = function (s) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
};

/**
 *  | Change the type of the result in a `State` action
 */
var mapState = function (f) {
    return Control_Monad_State_Trans.mapStateT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
};

/**
 *  | Run a computation in the `State` monad, discarding the result
 */
var execState = function (m) {
    return function (s) {
        return Data_Tuple.snd(runState(m)(s));
    };
};

/**
 *  | Run a computation in the `State` monad, discarding the final state
 */
var evalState = function (m) {
    return function (s) {
        return Data_Tuple.fst(runState(m)(s));
    };
};
module.exports = {
    withState: withState, 
    mapState: mapState, 
    execState: execState, 
    evalState: evalState, 
    runState: runState
};
