-- Generated by psc-make version 0.6.8
module Data.DOM.Simple.Ajax where
import Data.Function ()
import Data.DOM.Simple.Ajax ()
import Prelude ()
import Data.DOM.Simple.Unsafe.Ajax ()
import Prim ()
import Prelude ()
import Control.Monad.Eff ()
import Data.Function ()
import Data.Maybe ()
import DOM ()
import Data.DOM.Simple.Types ()
import Data.DOM.Simple.Unsafe.Ajax ()
--  These could be given more complete interfaces somewhere:
--  XXX should be encoded
data HttpData (a :: *) = NoData  | TextData Prim.String | ArrayBufferData Data.DOM.Simple.Ajax.ArrayBuffer | ArrayBufferViewData Data.DOM.Simple.Ajax.ArrayBufferView | BlobData Data.DOM.Simple.Ajax.Blob | FormData Data.DOM.Simple.Ajax.FormData | DocumentData Data.DOM.Simple.Types.HTMLDocument | JsonData a
foreign import data FormData :: *
foreign import data Blob :: *
foreign import data ArrayBufferView :: *
foreign import data ArrayBuffer :: *
data ResponseType = Default  | ArrayBuffer  | Blob  | Document  | Json  | Text  | MozBlob  | MozChunkedText  | MozChunkedArrayBuffer 
data HttpMethod = GET  | POST  | PUT  | DELETE  | PATCH  | HEAD  | OPTIONS  | JSONP  | HttpMethod Prim.String
type Url = Prim.String
data ReadyState = Unsent  | Opened  | HeadersReceived  | Loading  | Done 
foreign import overrideMimeType :: forall eff. Prim.String -> Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prelude.Unit
foreign import getResponseHeader :: forall eff. Prim.String -> Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) (Data.Maybe.Maybe Prim.String)
foreign import getAllResponseHeaders :: forall eff. Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prim.String
foreign import setRequestHeader :: forall eff. Prim.String -> Prim.String -> Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prelude.Unit
foreign import statusText :: forall eff. Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prim.String
foreign import status :: forall eff. Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prim.Number
foreign import responseText :: forall eff. Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prim.String
foreign import response :: forall eff a. Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) (Data.DOM.Simple.Ajax.HttpData a)
foreign import responseType :: forall eff. Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Data.DOM.Simple.Ajax.ResponseType
foreign import setResponseType :: forall eff. Data.DOM.Simple.Ajax.ResponseType -> Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prelude.Unit
foreign import send :: forall eff a. Data.DOM.Simple.Ajax.HttpData a -> Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prelude.Unit
foreign import open :: forall eff. Data.DOM.Simple.Ajax.HttpMethod -> Data.DOM.Simple.Ajax.Url -> Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prelude.Unit
foreign import onReadyStateChange :: forall eff e. Control.Monad.Eff.Eff e Prelude.Unit -> Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Prelude.Unit
foreign import readyState :: forall eff. Data.DOM.Simple.Types.XMLHttpRequest -> Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Data.DOM.Simple.Ajax.ReadyState
foreign import makeXMLHttpRequest :: forall eff. Control.Monad.Eff.Eff (dom :: DOM.DOM | eff) Data.DOM.Simple.Types.XMLHttpRequest
foreign import instance showHttpMethod :: Prelude.Show Data.DOM.Simple.Ajax.HttpMethod
foreign import instance showResponseType :: Prelude.Show Data.DOM.Simple.Ajax.ResponseType
