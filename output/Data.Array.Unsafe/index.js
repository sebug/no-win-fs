// Generated by psc-make version 0.6.8

/**
 *  | Unsafe helper functions for working with immutable arrays.
 *  |
 *  | _Note_: these functions should be used with care, and may result in unspecified
 *  | behavior, including runtime exceptions.
 */
"use strict";
var Prelude_Unsafe = require("Prelude.Unsafe");
var Prelude = require("Prelude");
var Data_Array = require("Data.Array");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");

/**
 *  | Get all but the first element of a non-empty array.
 *  |
 *  | Running time: `O(n)`, where `n` is the length of the array.
 */
var tail = function (_189) {
    if (_189.length >= 1) {
        var _1229 = _189.slice(1);
        return _1229;
    };
    throw new Error("Failed pattern match");
};

/**
 *  | Get the last element of a non-empty array.
 *  |
 *  | Running time: `O(1)`.
 */
var last = function (xs) {
    return xs[Data_Array.length(xs) - 1];
};

/**
 *  | Get all but the last element of a non-empty array.
 *  |
 *  | Running time: `O(n)`, where `n` is the length of the array.
 */
var init = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Array.init);

/**
 *  | Get the first element of a non-empty array.
 *  |
 *  | Running time: `O(1)`.
 */
var head = function (xs) {
    return xs[0];
};
module.exports = {
    init: init, 
    last: last, 
    tail: tail, 
    head: head
};
