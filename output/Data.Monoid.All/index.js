// Generated by psc-make version 0.6.8
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");

/**
 *  | Boolean monoid and semigroup under conjunction.
 *  |
 *  | ``` purescript
 *  | All x <> All y == All (x && y)
 *  | mempty :: All == All true
 *  | ```
 */
var All = function (x) {
    return x;
};
var showAll = new Prelude.Show(function (_233) {
    return "All (" + (Prelude.show(Prelude.showBoolean)(_233) + ")");
});
var semigroupAll = new Prelude.Semigroup(function (_234) {
    return function (_235) {
        return _234 && _235;
    };
});
var runAll = function (_226) {
    return _226;
};
var monoidAll = new Data_Monoid.Monoid(function () {
    return semigroupAll;
}, true);
var eqAll = new Prelude.Eq(function (_229) {
    return function (_230) {
        return _229 !== _230;
    };
}, function (_227) {
    return function (_228) {
        return _227 === _228;
    };
});
var ordAll = new Prelude.Ord(function () {
    return eqAll;
}, function (_231) {
    return function (_232) {
        return Prelude.compare(Prelude.ordBoolean)(_231)(_232);
    };
});
module.exports = {
    All: All, 
    runAll: runAll, 
    eqAll: eqAll, 
    ordAll: ordAll, 
    showAll: showAll, 
    semigroupAll: semigroupAll, 
    monoidAll: monoidAll
};
