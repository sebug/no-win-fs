-- Generated by psc-make version 0.6.8
module Data.Nullable where
import Data.Maybe ()
import Data.Nullable ()
import Data.Function ()
import Prelude ()
import Prim ()
import Prelude ()
import Data.Maybe ()
import Data.Function ()
foreign import data Nullable :: * -> *
foreign import toNullable :: forall a. Data.Maybe.Maybe a -> Data.Nullable.Nullable a
foreign import toMaybe :: forall a. Data.Nullable.Nullable a -> Data.Maybe.Maybe a
foreign import instance showNullable :: (Prelude.Show a) => Prelude.Show (Data.Nullable.Nullable a)
foreign import instance eqNullable :: (Prelude.Eq a) => Prelude.Eq (Data.Nullable.Nullable a)
foreign import instance ordNullable :: (Prelude.Ord a) => Prelude.Ord (Data.Nullable.Nullable a)
