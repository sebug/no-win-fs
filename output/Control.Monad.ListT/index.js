// Generated by psc-make version 0.6.8
"use strict";
var Prelude = require("Prelude");
var Data_Lazy = require("Data.Lazy");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Monoid = require("Data.Monoid");
var Data_Unfoldable = require("Data.Unfoldable");
var Control_Alt = require("Control.Alt");
var Control_Plus = require("Control.Plus");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Monad = require("Control.Monad");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Yield = (function () {
    function Yield(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Yield.create = function (value0) {
        return function (value1) {
            return new Yield(value0, value1);
        };
    };
    return Yield;
})();
var Skip = (function () {
    function Skip(value0) {
        this.value0 = value0;
    };
    Skip.create = function (value0) {
        return new Skip(value0);
    };
    return Skip;
})();
var Done = (function () {
    function Done() {

    };
    Done.value = new Done();
    return Done;
})();
var ListT = (function () {
    function ListT(value0) {
        this.value0 = value0;
    };
    ListT.create = function (value0) {
        return new ListT(value0);
    };
    return ListT;
})();
var wrapLazy = function (__dict_Monad_0) {
    return function (v) {
        return ListT.create(Prelude.pure(__dict_Monad_0["__superclass_Prelude.Applicative_0"]())(new Skip(v)));
    };
};
var wrapEffect = function (__dict_Monad_1) {
    return function (v) {
        return ListT.create(Prelude["<$>"](((__dict_Monad_1["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidArr)(Skip.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Lazy.defer)(Prelude["const"])))(v));
    };
};
var unfold = function (__dict_Monad_2) {
    return function (f) {
        return function (z) {
            var g = function (_815) {
                if (_815 instanceof Data_Maybe.Just) {
                    return new Yield(_815.value0.value1, Data_Lazy.defer(function (_805) {
                        return unfold(__dict_Monad_2)(f)(_815.value0.value0);
                    }));
                };
                if (_815 instanceof Data_Maybe.Nothing) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return ListT.create(Prelude["<$>"](((__dict_Monad_2["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(f(z)));
        };
    };
};
var runListT = function (_808) {
    return _808.value0;
};
var scanl = function (__dict_Monad_3) {
    return function (f) {
        return function (b) {
            return function (l) {
                var g = function (_825) {
                    var h = function (_826) {
                        if (_826 instanceof Yield) {
                            var b$prime = f(_825.value0)(_826.value0);
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime, Data_Lazy.force(_826.value1)), b$prime));
                        };
                        if (_826 instanceof Skip) {
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_825.value0, Data_Lazy.force(_826.value0)), _825.value0));
                        };
                        if (_826 instanceof Done) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude["<$>"](((__dict_Monad_3["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h)(runListT(_825.value1));
                };
                return unfold(__dict_Monad_3)(g)(new Data_Tuple.Tuple(b, l));
            };
        };
    };
};
var stepMap = function (__dict_Functor_4) {
    return function (f) {
        return function (l) {
            return ListT.create(Prelude["<$>"](__dict_Functor_4)(f)(runListT(l)));
        };
    };
};
var takeWhile = function (__dict_Applicative_5) {
    return function (f) {
        
        /**
         *  FIXME: type inferencer bug with if/then/else
         */
        var g = function (_817) {
            if (_817 instanceof Yield) {
                var ifThenElse = function (p) {
                    return function (a_1) {
                        return function (b) {
                            if (p) {
                                return a_1;
                            };
                            if (!p) {
                                return b;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                return ifThenElse(f(_817.value0))(new Yield(_817.value0, Prelude["<$>"](Data_Lazy.functorLazy)(takeWhile(__dict_Applicative_5)(f))(_817.value1)))(Done.value);
            };
            if (_817 instanceof Skip) {
                return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy)(takeWhile(__dict_Applicative_5)(f))(_817.value0));
            };
            if (_817 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match");
        };
        return stepMap((__dict_Applicative_5["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g);
    };
};
var uncons = function (__dict_Monad_6) {
    return function (l) {
        var g = function (_822) {
            if (_822 instanceof Yield) {
                return Prelude.pure(__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Just.create(new Data_Tuple.Tuple(_822.value0, Data_Lazy.force(_822.value1))));
            };
            if (_822 instanceof Skip) {
                return uncons(__dict_Monad_6)(Data_Lazy.force(_822.value0));
            };
            if (_822 instanceof Done) {
                return Prelude.pure(__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Nothing.value);
            };
            throw new Error("Failed pattern match");
        };
        return Prelude[">>="](__dict_Monad_6["__superclass_Prelude.Bind_1"]())(runListT(l))(g);
    };
};
var tail = function (__dict_Monad_7) {
    return function (l) {
        return Prelude["<$>"](((__dict_Monad_7["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.snd))(uncons(__dict_Monad_7)(l));
    };
};
var prepend$prime = function (__dict_Applicative_8) {
    return function (h) {
        return function (t) {
            return ListT.create(Prelude.pure(__dict_Applicative_8)(new Yield(h, t)));
        };
    };
};
var prepend = function (__dict_Applicative_9) {
    return function (h) {
        return function (t) {
            return prepend$prime(__dict_Applicative_9)(h)(Data_Lazy.defer(Prelude["const"](t)));
        };
    };
};
var nil = function (__dict_Applicative_10) {
    return ListT.create(Prelude.pure(__dict_Applicative_10)(Done.value));
};
var singleton = function (__dict_Applicative_12) {
    return function (a) {
        return prepend(__dict_Applicative_12)(a)(nil(__dict_Applicative_12));
    };
};
var take = function (__dict_Applicative_13) {
    return function (_809) {
        return function (_810) {
            if (_809 === 0) {
                return nil(__dict_Applicative_13);
            };
            var f = function (_816) {
                if (_816 instanceof Yield) {
                    var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(take(__dict_Applicative_13)(_809 - 1))(_816.value1);
                    return new Yield(_816.value0, s$prime);
                };
                if (_816 instanceof Skip) {
                    var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(take(__dict_Applicative_13)(_809))(_816.value0);
                    return new Skip(s$prime);
                };
                if (_816 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(_810);
        };
    };
};
var zipWith$prime = function (__dict_Monad_14) {
    return function (f) {
        var loop = function (fa) {
            return function (fb) {
                var g = function (_827) {
                    return function (_828) {
                        if (_828 instanceof Data_Maybe.Nothing) {
                            return Prelude.pure(__dict_Monad_14["__superclass_Prelude.Applicative_0"]())(nil(__dict_Monad_14["__superclass_Prelude.Applicative_0"]()));
                        };
                        if (_827 instanceof Data_Maybe.Nothing) {
                            return Prelude.pure(__dict_Monad_14["__superclass_Prelude.Applicative_0"]())(nil(__dict_Monad_14["__superclass_Prelude.Applicative_0"]()));
                        };
                        if (_827 instanceof Data_Maybe.Just && _828 instanceof Data_Maybe.Just) {
                            return Prelude["<$>"](((__dict_Monad_14["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(prepend$prime(__dict_Monad_14["__superclass_Prelude.Applicative_0"]()))(Data_Lazy.defer(function (_806) {
                                return zipWith$prime(__dict_Monad_14)(f)(_827.value0.value1)(_828.value0.value1);
                            })))(f(_827.value0.value0)(_828.value0.value0));
                        };
                        throw new Error("Failed pattern match");
                    };
                };
                return wrapEffect(__dict_Monad_14)(Prelude[">>="](__dict_Monad_14["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_14)(fa))(function (_51) {
                    return Prelude[">>="](__dict_Monad_14["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_14)(fb))(function (_50) {
                        return g(_51)(_50);
                    });
                }));
            };
        };
        return loop;
    };
};
var zipWith = function (__dict_Monad_15) {
    return function (f) {
        var g = function (a) {
            return function (b) {
                return Prelude.pure(__dict_Monad_15["__superclass_Prelude.Applicative_0"]())(f(a)(b));
            };
        };
        return zipWith$prime(__dict_Monad_15)(g);
    };
};
var mapMaybe = function (__dict_Functor_19) {
    return function (f) {
        var g = function (_821) {
            if (_821 instanceof Yield) {
                return Data_Maybe.fromMaybe(Skip.create)(Prelude["<$>"](Data_Maybe.functorMaybe)(Yield.create)(f(_821.value0)))(Prelude["<$>"](Data_Lazy.functorLazy)(mapMaybe(__dict_Functor_19)(f))(_821.value1));
            };
            if (_821 instanceof Skip) {
                return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy)(mapMaybe(__dict_Functor_19)(f))(_821.value0));
            };
            if (_821 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match");
        };
        return stepMap(__dict_Functor_19)(g);
    };
};
var iterate = function (__dict_Monad_20) {
    return function (f) {
        return function (a) {
            var g = function (a_1) {
                return Prelude.pure(__dict_Monad_20["__superclass_Prelude.Applicative_0"]())(new Data_Maybe.Just(new Data_Tuple.Tuple(f(a_1), a_1)));
            };
            return unfold(__dict_Monad_20)(g)(a);
        };
    };
};
var repeat = function (__dict_Monad_21) {
    return iterate(__dict_Monad_21)(Prelude.id(Prelude.categoryArr));
};
var head = function (__dict_Monad_22) {
    return function (l) {
        return Prelude["<$>"](((__dict_Monad_22["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.fst))(uncons(__dict_Monad_22)(l));
    };
};
var functorListT = function (__dict_Functor_23) {
    return new Prelude.Functor(function (f) {
        var g = function (_829) {
            if (_829 instanceof Yield) {
                return new Yield(f(_829.value0), Prelude["<$>"](Data_Lazy.functorLazy)(Prelude["<$>"](functorListT(__dict_Functor_23))(f))(_829.value1));
            };
            if (_829 instanceof Skip) {
                return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(Prelude["<$>"](functorListT(__dict_Functor_23))(f))(_829.value0));
            };
            if (_829 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match");
        };
        return stepMap(__dict_Functor_23)(g);
    });
};
var fromEffect = function (__dict_Applicative_24) {
    return function (fa) {
        return ListT.create(Prelude["<$>"]((__dict_Applicative_24["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(Yield.create)(Data_Lazy.defer(function (_804) {
            return nil(__dict_Applicative_24);
        })))(fa));
    };
};
var monadTransListT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_25) {
    return fromEffect(__dict_Monad_25["__superclass_Prelude.Applicative_0"]());
});
var fromArray = function (__dict_Monad_26) {
    return function (xs) {
        var f = function (n) {
            return Prelude.pure(__dict_Monad_26["__superclass_Prelude.Applicative_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create(n + 1))(Data_Array["!!"](xs)(n)));
        };
        return unfold(__dict_Monad_26)(f)(0);
    };
};
var foldl$prime = function (__dict_Monad_27) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (_823) {
                    if (_823 instanceof Data_Maybe.Nothing) {
                        return Prelude.pure(__dict_Monad_27["__superclass_Prelude.Applicative_0"]())(b);
                    };
                    if (_823 instanceof Data_Maybe.Just) {
                        return Prelude[">>="](__dict_Monad_27["__superclass_Prelude.Bind_1"]())(f(b)(_823.value0.value0))(Prelude.flip(loop)(_823.value0.value1));
                    };
                    throw new Error("Failed pattern match");
                };
                return Prelude[">>="](__dict_Monad_27["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_27)(l))(g);
            };
        };
        return loop;
    };
};
var foldl = function (__dict_Monad_28) {
    return function (f) {
        var loop = function (b) {
            return function (l) {
                var g = function (_824) {
                    if (_824 instanceof Data_Maybe.Nothing) {
                        return Prelude.pure(__dict_Monad_28["__superclass_Prelude.Applicative_0"]())(b);
                    };
                    if (_824 instanceof Data_Maybe.Just) {
                        return loop(f(b)(_824.value0.value0))(_824.value0.value1);
                    };
                    throw new Error("Failed pattern match");
                };
                return Prelude[">>="](__dict_Monad_28["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_28)(l))(g);
            };
        };
        return loop;
    };
};
var toArray = function (__dict_Monad_29) {
    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](((__dict_Monad_29["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Array.reverse))(foldl(__dict_Monad_29)(Prelude.flip(Prelude[":"]))([  ]));
};
var filter = function (__dict_Functor_30) {
    return function (f) {
        var g = function (_820) {
            if (_820 instanceof Yield) {
                var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(filter(__dict_Functor_30)(f))(_820.value1);
                var _2906 = f(_820.value0);
                if (_2906) {
                    return new Yield(_820.value0, s$prime);
                };
                if (!_2906) {
                    return new Skip(s$prime);
                };
                throw new Error("Failed pattern match");
            };
            if (_820 instanceof Skip) {
                var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(filter(__dict_Functor_30)(f))(_820.value0);
                return new Skip(s$prime);
            };
            if (_820 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match");
        };
        return stepMap(__dict_Functor_30)(g);
    };
};
var dropWhile = function (__dict_Applicative_31) {
    return function (f) {
        var g = function (_819) {
            if (_819 instanceof Yield) {
                var _2911 = f(_819.value0);
                if (_2911) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(dropWhile(__dict_Applicative_31)(f))(_819.value1));
                };
                if (!_2911) {
                    return new Yield(_819.value0, _819.value1);
                };
                throw new Error("Failed pattern match");
            };
            if (_819 instanceof Skip) {
                return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy)(dropWhile(__dict_Applicative_31)(f))(_819.value0));
            };
            if (_819 instanceof Done) {
                return Done.value;
            };
            throw new Error("Failed pattern match");
        };
        return stepMap((__dict_Applicative_31["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g);
    };
};
var drop = function (__dict_Applicative_32) {
    return function (_811) {
        return function (_812) {
            if (_811 === 0) {
                return _812;
            };
            var f = function (_818) {
                if (_818 instanceof Yield) {
                    var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(drop(__dict_Applicative_32)(_811 - 1))(_818.value1);
                    return new Skip(s$prime);
                };
                if (_818 instanceof Skip) {
                    var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(drop(__dict_Applicative_32)(_811))(_818.value0);
                    return new Skip(s$prime);
                };
                if (_818 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap((__dict_Applicative_32["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(_812);
        };
    };
};
var cons$prime = function (__dict_Applicative_33) {
    return function (lh) {
        return function (t) {
            var f = function (_813) {
                return new Yield(Data_Lazy.force(lh), t);
            };
            return ListT.create(Prelude["<$>"]((__dict_Applicative_33["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(Prelude.pure(__dict_Applicative_33)(Prelude.unit)));
        };
    };
};
var unfoldableListT = function (__dict_Monad_34) {
    return new Data_Unfoldable.Unfoldable(function (f) {
        return function (b) {
            var go = function (_830) {
                if (_830 instanceof Data_Maybe.Nothing) {
                    return nil(__dict_Monad_34["__superclass_Prelude.Applicative_0"]());
                };
                if (_830 instanceof Data_Maybe.Just) {
                    return cons$prime(__dict_Monad_34["__superclass_Prelude.Applicative_0"]())(Prelude.pure(Data_Lazy.applicativeLazy)(_830.value0.value0))(Data_Lazy.defer(function (_807) {
                        return go(f(_830.value0.value1));
                    }));
                };
                throw new Error("Failed pattern match");
            };
            return go(f(b));
        };
    });
};
var semigroupListT = function (__dict_Applicative_36) {
    return new Prelude.Semigroup(concat(__dict_Applicative_36));
};
var concat = function (__dict_Applicative_35) {
    return function (x) {
        return function (y) {
            var f = function (_814) {
                if (_814 instanceof Yield) {
                    return new Yield(_814.value0, Prelude["<$>"](Data_Lazy.functorLazy)(Prelude.flip(Prelude["<>"](semigroupListT(__dict_Applicative_35)))(y))(_814.value1));
                };
                if (_814 instanceof Skip) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(Prelude.flip(Prelude["<>"](semigroupListT(__dict_Applicative_35)))(y))(_814.value0));
                };
                if (_814 instanceof Done) {
                    return new Skip(Data_Lazy.defer(Prelude["const"](y)));
                };
                throw new Error("Failed pattern match");
            };
            return stepMap((__dict_Applicative_35["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(x);
        };
    };
};
var monoidListT = function (__dict_Applicative_16) {
    return new Data_Monoid.Monoid(function () {
        return semigroupListT(__dict_Applicative_16);
    }, nil(__dict_Applicative_16));
};
var catMaybes = function (__dict_Functor_37) {
    return mapMaybe(__dict_Functor_37)(Prelude.id(Prelude.categoryArr));
};
var applyListT = function (__dict_Monad_39) {
    return new Prelude.Apply((function () {
        var g = function (f) {
            return function (x) {
                return f(x);
            };
        };
        return zipWith(__dict_Monad_39)(g);
    })(), function () {
        return functorListT(((__dict_Monad_39["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
    });
};
var bindListT = function (__dict_Monad_38) {
    return new Prelude.Bind(function (fa) {
        return function (f) {
            var g = function (_831) {
                if (_831 instanceof Yield) {
                    var h = function (s_1) {
                        return concat(__dict_Monad_38["__superclass_Prelude.Applicative_0"]())(f(_831.value0))(Prelude[">>="](bindListT(__dict_Monad_38))(s_1)(f));
                    };
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(h)(_831.value1));
                };
                if (_831 instanceof Skip) {
                    var h = function (s_2) {
                        return Prelude[">>="](bindListT(__dict_Monad_38))(s_2)(f);
                    };
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(h)(_831.value0));
                };
                if (_831 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap(((__dict_Monad_38["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(fa);
        };
    }, function () {
        return applyListT(__dict_Monad_38);
    });
};
var applicativeListT = function (__dict_Monad_40) {
    return new Prelude.Applicative(function () {
        return applyListT(__dict_Monad_40);
    }, singleton(__dict_Monad_40["__superclass_Prelude.Applicative_0"]()));
};
var monadListT = function (__dict_Monad_18) {
    return new Prelude.Monad(function () {
        return applicativeListT(__dict_Monad_18);
    }, function () {
        return bindListT(__dict_Monad_18);
    });
};
var altListT = function (__dict_Applicative_42) {
    return new Control_Alt.Alt(concat(__dict_Applicative_42), function () {
        return functorListT((__dict_Applicative_42["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
    });
};
var plusListT = function (__dict_Monad_11) {
    return new Control_Plus.Plus(function () {
        return altListT(__dict_Monad_11["__superclass_Prelude.Applicative_0"]());
    }, nil(__dict_Monad_11["__superclass_Prelude.Applicative_0"]()));
};
var alternativeListT = function (__dict_Monad_41) {
    return new Control_Alternative.Alternative(function () {
        return plusListT(__dict_Monad_41);
    }, function () {
        return applicativeListT(__dict_Monad_41);
    });
};
var monadPlusListT = function (__dict_Monad_17) {
    return new Control_MonadPlus.MonadPlus(function () {
        return alternativeListT(__dict_Monad_17);
    }, function () {
        return monadListT(__dict_Monad_17);
    });
};
module.exports = {
    "zipWith'": zipWith$prime, 
    zipWith: zipWith, 
    wrapLazy: wrapLazy, 
    wrapEffect: wrapEffect, 
    unfold: unfold, 
    uncons: uncons, 
    toArray: toArray, 
    takeWhile: takeWhile, 
    take: take, 
    tail: tail, 
    singleton: singleton, 
    scanl: scanl, 
    repeat: repeat, 
    "prepend'": prepend$prime, 
    prepend: prepend, 
    nil: nil, 
    mapMaybe: mapMaybe, 
    iterate: iterate, 
    head: head, 
    fromEffect: fromEffect, 
    fromArray: fromArray, 
    "foldl'": foldl$prime, 
    foldl: foldl, 
    filter: filter, 
    dropWhile: dropWhile, 
    drop: drop, 
    "cons'": cons$prime, 
    catMaybes: catMaybes, 
    semigroupListT: semigroupListT, 
    monoidListT: monoidListT, 
    functorListT: functorListT, 
    unfoldableListT: unfoldableListT, 
    applyListT: applyListT, 
    applicativeListT: applicativeListT, 
    bindListT: bindListT, 
    monadListT: monadListT, 
    monadTransListT: monadTransListT, 
    altListT: altListT, 
    plusListT: plusListT, 
    alternativeListT: alternativeListT, 
    monadPlusListT: monadPlusListT
};
